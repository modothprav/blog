<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>java on Pravin&#39;s Blog</title>
    <link>https://blog.pravinmodotholi.live/tags/java/</link>
    <description>Recent content in java on Pravin&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>pravinmanoj44@gmail.com (Pravin Modotholi)</managingEditor>
    <webMaster>pravinmanoj44@gmail.com (Pravin Modotholi)</webMaster>
    <copyright>2022 Pravin Modotholi All rights reserved</copyright>
    <lastBuildDate>Sun, 27 Mar 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.pravinmodotholi.live/tags/java/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Page Object Model with Selenium</title>
      <link>https://blog.pravinmodotholi.live/2022/03/27/page-object-model-with-selenium/</link>
      <pubDate>Sun, 27 Mar 2022 00:00:00 +0000</pubDate>
      <author>pravinmanoj44@gmail.com (Pravin Modotholi)</author>
      <guid>https://blog.pravinmodotholi.live/2022/03/27/page-object-model-with-selenium/</guid>
      <description>The Page Object Model is a design pattern that is encouraged to be used during automation testing with Selenium. This design pattern creates an object repository of the web elements present on a web page. A Page object is represented as an Object-oriented class, which can contain methods that allow tests and other automation workflows to interact with the user interface of the web page.
Advantages One main benefit of using this design pattern is the ease of maintenance and flexibility for future changes.</description>
    </item>
    
  </channel>
</rss>
